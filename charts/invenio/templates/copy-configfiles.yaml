{{- $mounted := .Values.invenio.mountedDir }}
{{- $rendered := .Values.invenio.configDir }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ include "invenio.fullname" . }}-copy-configfiles
  labels:
    {{- include "invenio.labels" . | nindent 4 }}
    app: {{ .Values.invenio.remote_apps.secret_name }}
  annotations:
    helm.sh/resource-policy: keep
stringData:
  copy.sh: |-
    cd {{ $mounted }}
    {{- if or (and .Values.postgresql.enabled .Values.postgresql.auth.password (not .Values.postgresql.auth.existingSecret)) 
              (and (not .Values.postgresql.enabled) .Values.postgresqlExternal.password (not .Values.postgresqlExternal.existingSecret)) }}
    # postgres password set in Values
    {{ printf "INVENIO_DB_PASSWORD=$(cat INVENIO_DB_PASSWORD)" }}
    {{- else }}
    # postgres password from secret
    {{ printf "INVENIO_DB_PASSWORD=$(cat %s)" (ternary .Values.postgresql.auth.secretKeys.userPasswordKey .Values.postgresqlExternal.existingSecretPasswordKey .Values.postgresql.enabled) }}
    {{- end }}
    {{ printf "INVENIO_DB_USER=$(cat INVENIO_DB_USER)" }}
    {{ printf "INVENIO_DB_HOST=$(cat INVENIO_DB_HOST)" }}
    {{ printf "INVENIO_DB_PORT=$(cat INVENIO_DB_PORT)" }}
    {{ printf "INVENIO_DB_NAME=$(cat INVENIO_DB_NAME)" }}
    {{ printf "INVENIO_DB_PROTOCOL=$(cat INVENIO_DB_PROTOCOL)" }}
    {{ printf "echo INVENIO_SQLALCHEMY_DATABASE_URI: \\\"${INVENIO_DB_PROTOCOL}://${INVENIO_DB_USER}:${INVENIO_DB_PASSWORD}@${INVENIO_DB_HOST}:${INVENIO_DB_PORT}/${INVENIO_DB_NAME}\\\" >  %s/INVENIO_SQLALCHEMY_DATABASE_URI.yaml" $rendered }}
