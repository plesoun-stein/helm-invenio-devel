---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "invenio.fullname" . }}-worker-beat
  labels:
    {{- include "invenio.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker-beat
spec:
  replicas: 1 # For data safety, beat must never have more than 1 replica!
  selector:
    matchLabels:
      app.kubernetes.io/component: worker-beat
  template:
    metadata:
      labels:
        app.kubernetes.io/component: worker-beat
    spec:
      {{- with .Values.workerBeat.nodeSelector }}
      nodeSelector:
        {{- tpl (toYaml .) $ | nindent 8 -}}
      {{- end }}
      {{- with .Values.workerBeat.tolerations }}
      tolerations:
        {{- tpl (toYaml .) $ | nindent 8 -}}
      {{- end }}
      containers:
      - name: worker-beat
        image: {{ default .Values.worker.image (include "invenio.image" .) }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: [
          "/bin/bash",
          "-c",
          "celery -A {{ .Values.worker.app }} beat -l {{ .Values.worker.log_level }} -s {{ .Values.worker.celery_schedule }} --pidfile {{ .Values.worker.celery_pidfile }}"
        ]
        securityContext:
          {{- with .Values.workerBeat.securityContext }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        volumeMounts:
        - name: config-files
          mountPath: /configs
        - name: var-run-celery
          mountPath: {{ .Values.worker.run_mount_path }}
        {{- if .Values.persistence.enabled }}
        - mountPath: /opt/invenio/var/instance/data
          name: shared-volume
        {{- end }}
        {{- range $key, $value := .Values.invenio.vocabularies }}
        - name: vocabularies
          mountPath: "/opt/invenio/var/instance/app_data/vocabularies/{{ $key }}"
          subPath: "{{ $key }}"
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "invenio.fullname" . }}-config
        - secretRef:
            name: {{ include "invenio.secretName" . }}
        {{- with .Values.invenio.extraEnvFrom }}
        {{- tpl (. | toYaml) $ | nindent 8 }}
        {{- end }}
        {{- with .Values.workerBeat.extraEnvFrom }}
        {{- tpl (. | toYaml) $ | nindent 8 }}
        {{- end }}
        env: 
        - name: TZ 
          value: {{ required "Missing .Values.global.timezone" .Values.global.timezone }} 
        {{- if .Values.invenio.configDir }} 
        - name: INVENIO_CONFIG_DIR 
          value: {{ .Values.invenio.configDir }} 
        {{- end }}
        {{- if not .Values.rabbitmqExternal.configFile }}
        {{- include "invenio.config.queue" . | nindent 8 }}
        {{- end }}
        {{- if not .Values.postgresqlExternal.configFile }}
        {{- include "invenio.config.database" . | nindent 8 }}
        {{- end }}
        {{- if not .Values.redisExternal.configFile }}
        {{- include "invenio.config.cache" . | nindent 8 }}
        {{- end }}

        {{- with .Values.invenio.extraEnvVars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.workerBeat.extraEnvVars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "invenio.config.sentry" . | nindent 8 }}
        {{- include "invenio.config.datacite" . | nindent 8 }}
        {{- range .Values.invenio.extra_env_from_secret }}
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ .valueFrom.secretKeyRef.name }}
              key: {{ .valueFrom.secretKeyRef.key }}
        {{- end }}
        livenessProbe: {{- tpl (.Values.workerBeat.livenessProbe | toYaml) $ | nindent 10 }}
        readinessProbe: {{- tpl (.Values.workerBeat.readinessProbe | toYaml) $ | nindent 10 }}
        startupProbe: {{- tpl (.Values.workerBeat.startupProbe | toYaml) $ | nindent 10 }}
        resources: {{- toYaml .Values.workerBeat.resources | nindent 10 }}
      initContainers:
      # copy configfiles
        - name: copy-configfiles
          image: {{ default .Values.web.image (include "invenio.image" .) }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [
              "/bin/bash",
              "/mounted/scripts/copy.sh"
          ]
          resources: {{- toYaml .Values.web.initContainers.resources | nindent 12 }}
          securityContext:
            {{- with .Values.web.initContainers.securityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
          - name: copy-configdata
            mountPath: /mounted/scripts
          - name: config-files
            mountPath: /configs
          {{- if .Values.postgresqlExternal.configFile }}
          - name: postgresql-config
            mountPath: /mounted/postgresql
          {{- end }}
          {{- if .Values.rabbitmqExternal.configFile }}
          - name: rabbitmq-config
            mountPath: /mounted/rabbitmq
          {{- end }}
          {{- if .Values.redisExternal.configFile }}
          - name: redis-config
            mountPath: /mounted/redis
          {{- end }}
          {{- if .Values.invenio.extraConfigFiles }}
          - name: extra-configfiles
            mountPath: /mounted/extra
          {{- end }}
      securityContext:
        {{- with .Values.workerBeat.podSecurityContext }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      - name: config-files
        emptyDir: {}
      - name: copy-configdata
        projected:
          sources:
            - secret:
                name: {{ include "invenio.fullname" . }}-copy-configfiles
                items:
                - key: copy.sh
                  path: copy.sh
      {{- if .Values.invenio.extraConfigFiles }}
      {{- include "invenio.extraConfigFiles" . | nindent 6 }}
      {{- end }}
      {{- if .Values.postgresqlExternal.configFile }}
      {{- include "invenio.postgresql.configFile" . | nindent 6 }}
      {{- end }}
      {{- if .Values.rabbitmqExternal.configFile }}
      {{- include "invenio.rabbitmq.configFile" . | nindent 6 }}
      {{- end }}
      {{- if .Values.redisExternal.configFile }}
      {{- include "invenio.redis.configFile" . | nindent 6 }}
      {{- end }}

      - name: var-run-celery
        emptyDir:
          medium: Memory
      {{- if .Values.persistence.enabled }}
      - name: shared-volume
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.name }}
      {{- end }}
      {{- if .Values.invenio.vocabularies }}
      - name: vocabularies
        configMap:
          name: "{{ include "invenio.fullname" . }}-vocabularies"
      {{- end }}
      {{- if .Values.worker.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.worker.imagePullSecret }}
      {{- end }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  strategy:
    type: Recreate # For data safety, beat must never have more than 1 replica!
